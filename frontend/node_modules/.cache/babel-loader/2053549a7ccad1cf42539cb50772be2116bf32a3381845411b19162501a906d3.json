{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenni.mikkonen\\\\OneDrive - LightningChart Ltd\\\\Repos\\\\lcjs-dashboard\\\\frontend\\\\src\\\\components\\\\charts\\\\PieChart.jsx\",\n  _s = $RefreshSig$();\nimport { PieChartTypes, SliceLabelFormatters, Themes } from \"@lightningchart/lcjs\";\nimport { useEffect, useState, useContext, useId } from \"react\";\nimport { LCContext } from \"../../LC\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PieChart(props) {\n  _s();\n  const data = props.data;\n  const title = props.title;\n  // console.log(`PieChart ${title} data`, data);\n  const id = useId();\n  const lc = useContext(LCContext);\n  const [chart, setChart] = useState(undefined);\n\n  // Create chart just once during lifecycle of component.\n  useEffect(() => {\n    const container = document.getElementById(id);\n    if (!container) return;\n    if (!lc) {\n      console.log(\"LC context not ready yet\");\n      return;\n    }\n    if (!data || !Array.isArray(data) || data.length === 0) {\n      console.log(\"PieChart: No data available\");\n      return;\n    }\n    let actualChart;\n    const pieType = window.innerWidth > 599 ? PieChartTypes.LabelsOnSides : PieChartTypes.LabelsInsideSlices;\n    const pie = lc.Pie({\n      theme: Themes.cyberSpace,\n      type: pieType,\n      container: container\n    });\n    pie.setTitle(title || 'Sleep Stages').setMultipleSliceExplosion(true);\n    actualChart = pie;\n\n    // Convert sleep stage data to pie chart format\n    const pieData = data.map(stage => {\n      // Calculate total duration for this stage across all spans\n      const totalDuration = stage.spans.reduce((sum, span) => {\n        return sum + (span[1] - span[0]); // end - start\n      }, 0);\n\n      // Convert stage names to more readable labels\n      const stageLabels = {\n        light: 'Light',\n        deep: 'Deep',\n        rem: 'REM'\n      };\n      return {\n        name: stageLabels[stage.stage] || stage.stage,\n        value: Math.round(totalDuration * 60) // Convert hours to minutes\n      };\n    }).filter(item => item.value > 0); // Only include stages with data\n\n    console.log(\"PieChart converted data:\", pieData);\n\n    // Create slices\n    if (pieData.length > 0) {\n      const slices = pieData.map(item => pie.addSlice(item.name, item.value));\n      pie.setLabelFormatter(SliceLabelFormatters.NamePlusRelativeValue);\n    } else {\n      console.log(\"PieChart: No valid sleep data to display\");\n    }\n    setChart(pie);\n    return () => {\n      // Destroy the actual chart instance when component lifecycle ends\n      if (actualChart) {\n        actualChart.dispose();\n      }\n    };\n  }, [id, lc, data, title]);\n\n  // Update data whenever data prop changes.\n  useEffect(() => {\n    if (!chart || !data || chart.isDisposed()) return;\n    console.log(`PieChart ${title} update, data: `, data);\n    // Clear old slices\n    // chart.clear()\n    // const slices = chart.getSlices()\n\n    // Convert sleep stage spans into minutes\n    // const stageLabels = { light: \"Light\", deep: \"Deep\", rem: \"REM\" }\n    const pieData = [];\n    // data.map(stage => {\n    //     const totalMinutes = stage.spans.reduce((sum, [start, end]) => sum + (end - start), 0) * 60\n    //     return {\n    //     name: stageLabels[stage.stage] || stage.stage,\n    //     value: Math.round(totalMinutes)\n    //     }\n    // }).filter(item => item.value > 0)\n\n    // // Add new slices\n    // pieData.forEach(item => {\n    //     chart.addSlice(item.name, item.value)\n    // })\n    const slices = chart.getSlices();\n    pieData.forEach(item => {\n      const slice = slices.find(s => s.getName() === item.name);\n      if (slice) {\n        slice.setValue(item.value);\n      } else {\n        chart.addSlice(item.name, item.value);\n      }\n    });\n  }, [chart, data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 10\n  }, this);\n}\n_s(PieChart, \"lPoGF9T2AB4o0eYXL6tWsHPot3c=\", false, function () {\n  return [useId];\n});\n_c = PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["PieChartTypes","SliceLabelFormatters","Themes","useEffect","useState","useContext","useId","LCContext","jsxDEV","_jsxDEV","PieChart","props","_s","data","title","id","lc","chart","setChart","undefined","container","document","getElementById","console","log","Array","isArray","length","actualChart","pieType","window","innerWidth","LabelsOnSides","LabelsInsideSlices","pie","Pie","theme","cyberSpace","type","setTitle","setMultipleSliceExplosion","pieData","map","stage","totalDuration","spans","reduce","sum","span","stageLabels","light","deep","rem","name","value","Math","round","filter","item","slices","addSlice","setLabelFormatter","NamePlusRelativeValue","dispose","isDisposed","getSlices","forEach","slice","find","s","getName","setValue","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jenni.mikkonen/OneDrive - LightningChart Ltd/Repos/lcjs-dashboard/frontend/src/components/charts/PieChart.jsx"],"sourcesContent":["import { PieChartTypes, SliceLabelFormatters, Themes } from \"@lightningchart/lcjs\";\r\nimport { useEffect, useState, useContext, useId } from \"react\";\r\nimport { LCContext } from \"../../LC\";\r\n\r\nexport default function PieChart(props) {\r\n  const data = props.data;\r\n  const title = props.title;\r\n  // console.log(`PieChart ${title} data`, data);\r\n  const id = useId();\r\n  const lc = useContext(LCContext);\r\n  const [chart, setChart] = useState(undefined);\r\n\r\n  // Create chart just once during lifecycle of component.\r\n  useEffect(() => {\r\n    const container = document.getElementById(id);\r\n    if (!container) return;\r\n    if (!lc) {\r\n      console.log(\"LC context not ready yet\");\r\n      return;\r\n    }\r\n    if (!data || !Array.isArray(data) || data.length === 0) {\r\n      console.log(\"PieChart: No data available\");\r\n      return;\r\n    }\r\n\r\n    let actualChart;\r\n\r\n    const pieType = window.innerWidth > 599 ? PieChartTypes.LabelsOnSides : PieChartTypes.LabelsInsideSlices;\r\n\r\n    const pie = lc.Pie({\r\n        theme: Themes.cyberSpace,\r\n        type: pieType,\r\n        container: container,\r\n    });\r\n\r\n    pie.setTitle(title || 'Sleep Stages')\r\n    .setMultipleSliceExplosion(true);\r\n\r\n    actualChart = pie;\r\n\r\n    // Convert sleep stage data to pie chart format\r\n    const pieData = data.map(stage => {\r\n      // Calculate total duration for this stage across all spans\r\n      const totalDuration = stage.spans.reduce((sum, span) => {\r\n        return sum + (span[1] - span[0]); // end - start\r\n      }, 0);\r\n      \r\n      // Convert stage names to more readable labels\r\n      const stageLabels = {\r\n        light: 'Light',\r\n        deep: 'Deep', \r\n        rem: 'REM'\r\n      };\r\n      \r\n      return {\r\n        name: stageLabels[stage.stage] || stage.stage,\r\n        value: Math.round(totalDuration * 60) // Convert hours to minutes\r\n      };\r\n    }).filter(item => item.value > 0); // Only include stages with data\r\n\r\n    console.log(\"PieChart converted data:\", pieData);\r\n\r\n    // Create slices\r\n    if (pieData.length > 0) {\r\n      const slices = pieData.map((item) => pie.addSlice(item.name, item.value));\r\n      pie.setLabelFormatter(SliceLabelFormatters.NamePlusRelativeValue);\r\n    } else {\r\n      console.log(\"PieChart: No valid sleep data to display\");\r\n    }\r\n  \r\n    setChart(pie);\r\n\r\n    return () => {\r\n      // Destroy the actual chart instance when component lifecycle ends\r\n      if (actualChart) {\r\n        actualChart.dispose();\r\n      }\r\n    };\r\n\r\n  }, [id, lc, data, title]); \r\n\r\n  // Update data whenever data prop changes.\r\n  useEffect(() => {\r\n     if (!chart || !data || chart.isDisposed()) return\r\n\r\n    console.log(`PieChart ${title} update, data: `, data);\r\n    // Clear old slices\r\n    // chart.clear()\r\n    // const slices = chart.getSlices()\r\n\r\n    // Convert sleep stage spans into minutes\r\n    // const stageLabels = { light: \"Light\", deep: \"Deep\", rem: \"REM\" }\r\n    const pieData = [];\r\n    // data.map(stage => {\r\n    //     const totalMinutes = stage.spans.reduce((sum, [start, end]) => sum + (end - start), 0) * 60\r\n    //     return {\r\n    //     name: stageLabels[stage.stage] || stage.stage,\r\n    //     value: Math.round(totalMinutes)\r\n    //     }\r\n    // }).filter(item => item.value > 0)\r\n\r\n    // // Add new slices\r\n    // pieData.forEach(item => {\r\n    //     chart.addSlice(item.name, item.value)\r\n    // })\r\n    const slices = chart.getSlices()\r\n    pieData.forEach((item) => {\r\n        const slice = slices.find((s) => s.getName() === item.name)\r\n        if (slice) {\r\n            slice.setValue(item.value)\r\n        } else {\r\n            chart.addSlice(item.name, item.value)\r\n        }\r\n    })\r\n  }, [chart, data]);\r\n\r\n  return <div id={id} style={{ width: \"100%\", height: \"100%\" }}></div>;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}