{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenni.mikkonen\\\\OneDrive - LightningChart Ltd\\\\Repos\\\\lcjs-dashboard\\\\frontend\\\\src\\\\components\\\\MultiChart.jsx\",\n  _s = $RefreshSig$();\nimport { Themes, AxisScrollStrategies, AxisTickStrategies, emptyLine } from \"@lightningchart/lcjs\";\nimport { useEffect, useState, useContext, useId } from \"react\";\nimport { LCContext } from \"../LC\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MultiChart(props) {\n  _s();\n  const heartRate = props.data.heart_rate;\n  const steps = props.steps;\n  const calories = props.data.calories;\n  const titles = [\"Heart Rate\", \"Steps/Min\", \"Kcal/Min\"];\n  const id = useId();\n  const lc = useContext(LCContext);\n  const [charts, setCharts] = useState(undefined);\n  const [gauges, setGauges] = useState(undefined);\n  useEffect(() => {\n    const container = document.getElementById(id);\n    if (!container || !lc) return;\n\n    // Make container a flexbox row\n    container.style.display = \"flex\";\n    container.style.flexDirection = \"row\";\n    container.style.width = \"100%\";\n    container.style.height = \"100%\";\n    container.style.boxSizing = \"border-box\";\n\n    // Gauges container\n    const gaugeLayout = document.createElement(\"div\");\n    container.append(gaugeLayout);\n    gaugeLayout.style.flex = \"25%\";\n    gaugeLayout.style.height = \"100%\";\n\n    // XY container\n    const xyContainer = document.createElement(\"div\");\n    container.append(xyContainer);\n    xyContainer.style.flex = \"75%\";\n    xyContainer.style.height = \"100%\";\n    const gaugeChartArray = [];\n    const lineSeriesArray = [];\n\n    // Create XY chart\n    const xyChart = lc.ChartXY({\n      container: xyContainer,\n      theme: Themes.cyberSpace,\n      legend: {\n        visible: false\n      }\n    }).setTitle(\"\").setCursor(cursor => cursor.setTickMarkerXVisible(false));\n    xyChart.getDefaultAxisX().setTickStrategy(AxisTickStrategies.Empty).setThickness(0).setStrokeStyle(emptyLine).setScrollStrategy(AxisScrollStrategies.scrolling).setInterval({\n      start: 0,\n      end: 10000,\n      stopAxisAfter: false\n    });\n    xyChart.getDefaultAxisY().dispose();\n\n    // 3 stacked line series + gauges\n    for (let iCh = 0; iCh < 3; iCh++) {\n      const axisY = xyChart.addAxisY({\n        iStack: 3 - iCh\n      }).setMargins(5, 5).setInterval({\n        start: 0,\n        end: 100\n      });\n      const lineSeries = xyChart.addLineSeries({\n        axisY\n      }).setMaxSampleCount(10000);\n      lineSeriesArray.push(lineSeries);\n\n      // const gaugeContainer = document.createElement(\"div\");\n      // gaugeLayout.append(gaugeContainer);\n      // gaugeContainer.style.height = \"33.33%\";\n\n      const gauge = lc.Gauge({\n        container: gaugeContainer,\n        theme: Themes.cyberSpace\n      }).setTitle(\"\").setUnitLabel(titles[iCh]).setInterval(0, 100).setAngleInterval(180, 0).setRoundedEdges(false).setBarThickness(20).setNeedleLength(20).setNeedleThickness(5).setValueIndicatorThickness(10).setGapBetweenBarAndValueIndicators(1).setTickFormatter(tick => tick.toFixed(0)).setValueLabelFont(font => font.setSize(24)).setUnitLabelFont(font => font.setSize(16)).setTickFont(font => font.setSize(16));\n      gaugeChartArray.push(gauge);\n    }\n\n    // Color palette for gauges\n    const valueIndicators = [];\n    const colorPalette = gaugeChartArray[0].getTheme().examples.badGoodColorPalette;\n    const stepSize = 100 / colorPalette.length;\n    colorPalette.forEach((color, index) => {\n      valueIndicators.push({\n        start: stepSize * index,\n        end: stepSize * (index + 1),\n        color\n      });\n    });\n    gaugeChartArray.forEach(gauge => gauge.setValueIndicators(valueIndicators));\n    setCharts(lineSeriesArray);\n    setGauges(gaugeChartArray);\n    return () => {\n      xyChart.dispose();\n      gaugeChartArray.forEach(gauge => gauge.dispose());\n    };\n  }, [id, lc]);\n\n  // Update line series\n  useEffect(() => {\n    if (!charts) return;\n    charts[0].axisY.setInterval({\n      start: 20,\n      end: 150\n    });\n    charts[0].appendJSON({\n      x: performance.now(),\n      y: heartRate\n    });\n    charts[1].axisY.setInterval({\n      start: 0,\n      end: 150\n    });\n    charts[1].appendJSON({\n      x: performance.now(),\n      y: steps\n    });\n    charts[2].axisY.setInterval({\n      start: 0,\n      end: 15\n    });\n    charts[2].appendJSON({\n      x: performance.now(),\n      y: calories\n    });\n  }, [charts, heartRate, steps, calories]);\n\n  // Update gauges\n  useEffect(() => {\n    if (!gauges) return;\n    gauges[0].setValue(heartRate);\n    gauges[1].setValue(steps);\n    gauges[2].setValue(calories);\n  }, [gauges, heartRate, steps, calories]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 10\n  }, this);\n}\n_s(MultiChart, \"B/mQ+QacWDmc/Dd1pySnZP72pWc=\", false, function () {\n  return [useId];\n});\n_c = MultiChart;\nvar _c;\n$RefreshReg$(_c, \"MultiChart\");","map":{"version":3,"names":["Themes","AxisScrollStrategies","AxisTickStrategies","emptyLine","useEffect","useState","useContext","useId","LCContext","jsxDEV","_jsxDEV","MultiChart","props","_s","heartRate","data","heart_rate","steps","calories","titles","id","lc","charts","setCharts","undefined","gauges","setGauges","container","document","getElementById","style","display","flexDirection","width","height","boxSizing","gaugeLayout","createElement","append","flex","xyContainer","gaugeChartArray","lineSeriesArray","xyChart","ChartXY","theme","cyberSpace","legend","visible","setTitle","setCursor","cursor","setTickMarkerXVisible","getDefaultAxisX","setTickStrategy","Empty","setThickness","setStrokeStyle","setScrollStrategy","scrolling","setInterval","start","end","stopAxisAfter","getDefaultAxisY","dispose","iCh","axisY","addAxisY","iStack","setMargins","lineSeries","addLineSeries","setMaxSampleCount","push","gauge","Gauge","gaugeContainer","setUnitLabel","setAngleInterval","setRoundedEdges","setBarThickness","setNeedleLength","setNeedleThickness","setValueIndicatorThickness","setGapBetweenBarAndValueIndicators","setTickFormatter","tick","toFixed","setValueLabelFont","font","setSize","setUnitLabelFont","setTickFont","valueIndicators","colorPalette","getTheme","examples","badGoodColorPalette","stepSize","length","forEach","color","index","setValueIndicators","appendJSON","x","performance","now","y","setValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jenni.mikkonen/OneDrive - LightningChart Ltd/Repos/lcjs-dashboard/frontend/src/components/MultiChart.jsx"],"sourcesContent":["import { Themes, AxisScrollStrategies, AxisTickStrategies, emptyLine } from \"@lightningchart/lcjs\";\r\nimport { useEffect, useState, useContext, useId } from \"react\";\r\nimport { LCContext } from \"../LC\";\r\n\r\nexport default function MultiChart(props) {\r\n  const heartRate = props.data.heart_rate;\r\n  const steps = props.steps;\r\n  const calories = props.data.calories;\r\n  const titles = [\"Heart Rate\", \"Steps/Min\", \"Kcal/Min\"];\r\n\r\n  const id = useId();\r\n  const lc = useContext(LCContext);\r\n  const [charts, setCharts] = useState(undefined);\r\n  const [gauges, setGauges] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById(id);\r\n    if (!container || !lc) return;\r\n\r\n    // Make container a flexbox row\r\n    container.style.display = \"flex\";\r\n    container.style.flexDirection = \"row\";\r\n    container.style.width = \"100%\";\r\n    container.style.height = \"100%\";\r\n    container.style.boxSizing = \"border-box\";\r\n\r\n    // Gauges container\r\n    const gaugeLayout = document.createElement(\"div\");\r\n    container.append(gaugeLayout);\r\n    gaugeLayout.style.flex = \"25%\";  \r\n    gaugeLayout.style.height = \"100%\";\r\n\r\n    // XY container\r\n    const xyContainer = document.createElement(\"div\");\r\n    container.append(xyContainer);\r\n    xyContainer.style.flex = \"75%\";         \r\n    xyContainer.style.height = \"100%\";\r\n\r\n    const gaugeChartArray = [];\r\n    const lineSeriesArray = [];\r\n\r\n    // Create XY chart\r\n    const xyChart = lc.ChartXY({\r\n      container: xyContainer,\r\n      theme: Themes.cyberSpace,\r\n      legend: { visible: false },\r\n    })\r\n      .setTitle(\"\")\r\n      .setCursor((cursor) => cursor.setTickMarkerXVisible(false));\r\n\r\n    xyChart\r\n      .getDefaultAxisX()\r\n      .setTickStrategy(AxisTickStrategies.Empty)\r\n      .setThickness(0)\r\n      .setStrokeStyle(emptyLine)\r\n      .setScrollStrategy(AxisScrollStrategies.scrolling)\r\n      .setInterval({ start: 0, end: 10_000, stopAxisAfter: false });\r\n\r\n    xyChart.getDefaultAxisY().dispose();\r\n\r\n    // 3 stacked line series + gauges\r\n    for (let iCh = 0; iCh < 3; iCh++) {\r\n      const axisY = xyChart\r\n        .addAxisY({ iStack: 3 - iCh })\r\n        .setMargins(5, 5)\r\n        .setInterval({ start: 0, end: 100 });\r\n      const lineSeries = xyChart.addLineSeries({ axisY }).setMaxSampleCount(10_000);\r\n      lineSeriesArray.push(lineSeries);\r\n\r\n      // const gaugeContainer = document.createElement(\"div\");\r\n      // gaugeLayout.append(gaugeContainer);\r\n      // gaugeContainer.style.height = \"33.33%\";\r\n\r\n      const gauge = lc.Gauge({\r\n        container: gaugeContainer,\r\n        theme: Themes.cyberSpace,\r\n      })\r\n        .setTitle(\"\")\r\n        .setUnitLabel(titles[iCh])\r\n        .setInterval(0, 100)\r\n        .setAngleInterval(180, 0)\r\n        .setRoundedEdges(false)\r\n        .setBarThickness(20)\r\n        .setNeedleLength(20)\r\n        .setNeedleThickness(5)\r\n        .setValueIndicatorThickness(10)\r\n        .setGapBetweenBarAndValueIndicators(1)\r\n        .setTickFormatter((tick) => tick.toFixed(0))\r\n        .setValueLabelFont((font) => font.setSize(24))\r\n        .setUnitLabelFont((font) => font.setSize(16))\r\n        .setTickFont((font) => font.setSize(16));\r\n\r\n      gaugeChartArray.push(gauge);\r\n    }\r\n\r\n    // Color palette for gauges\r\n    const valueIndicators = [];\r\n    const colorPalette = gaugeChartArray[0].getTheme().examples.badGoodColorPalette;\r\n    const stepSize = 100 / colorPalette.length;\r\n    colorPalette.forEach((color, index) => {\r\n      valueIndicators.push({\r\n        start: stepSize * index,\r\n        end: stepSize * (index + 1),\r\n        color,\r\n      });\r\n    });\r\n    gaugeChartArray.forEach((gauge) => gauge.setValueIndicators(valueIndicators));\r\n\r\n    setCharts(lineSeriesArray);\r\n    setGauges(gaugeChartArray);\r\n\r\n    return () => {\r\n      xyChart.dispose();\r\n      gaugeChartArray.forEach((gauge) => gauge.dispose());\r\n    };\r\n  }, [id, lc]);\r\n\r\n  // Update line series\r\n  useEffect(() => {\r\n    if (!charts) return;\r\n    charts[0].axisY.setInterval({ start: 20, end: 150 });\r\n    charts[0].appendJSON({ x: performance.now(), y: heartRate });\r\n    charts[1].axisY.setInterval({ start: 0, end: 150 });\r\n    charts[1].appendJSON({ x: performance.now(), y: steps });\r\n    charts[2].axisY.setInterval({ start: 0, end: 15 });\r\n    charts[2].appendJSON({ x: performance.now(), y: calories });\r\n  }, [charts, heartRate, steps, calories]);\r\n\r\n  // Update gauges\r\n  useEffect(() => {\r\n    if (!gauges) return;\r\n    gauges[0].setValue(heartRate);\r\n    gauges[1].setValue(steps);\r\n    gauges[2].setValue(calories);\r\n  }, [gauges, heartRate, steps, calories]);\r\n\r\n  return <div id={id} style={{ width: \"100%\", height: \"100%\" }}></div>;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}