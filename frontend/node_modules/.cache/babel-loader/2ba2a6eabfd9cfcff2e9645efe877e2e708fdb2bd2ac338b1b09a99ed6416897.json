{"ast":null,"code":"import calcSleepAverages from './calcSleepAverages.js';\nimport calcWellnessIndex from './calcWellnessIndex.js';\nexport default function getInitialData(minuteSeries, hourSeries, daySeries, sleepSeries) {\n  var _lastSleep$sleep;\n  const lastDate = \"2022-01-21\";\n\n  // Sleep data (from daySeries)\n  const lastSleep = daySeries.find(day => day.date === lastDate);\n  const currentStages = (lastSleep === null || lastSleep === void 0 ? void 0 : (_lastSleep$sleep = lastSleep.sleep) === null || _lastSleep$sleep === void 0 ? void 0 : _lastSleep$sleep.levels) || [];\n\n  // Last 7 nights of sleep\n  const lastDayDate = new Date(lastDate + 'T00:00:00Z');\n  const sevenDaysAgo = new Date(lastDayDate.getTime() - 6 * 24 * 60 * 60 * 1000);\n  const last7Nights = (sleepSeries || []).filter(day => {\n    const d = new Date(day.date + 'T00:00:00Z');\n    return d >= sevenDaysAgo && d <= lastDayDate && day.sleep;\n  });\n  const avgStages = calcSleepAverages(last7Nights);\n  console.log(\"getInitialData: avgStages:\", avgStages);\n\n  // Wellness index\n  const lastDayMinuteData = minuteSeries.filter(record => (record === null || record === void 0 ? void 0 : record.timestamp) && record.timestamp.startsWith(lastDate));\n  const lastDayHourData = hourSeries.filter(record => (record === null || record === void 0 ? void 0 : record.timestamp) && record.timestamp.startsWith(lastDate));\n  const wellness = calcWellnessIndex(lastDayMinuteData, currentStages, lastDayHourData);\n  return {\n    currentStages,\n    avgStages,\n    wellness\n  };\n}","map":{"version":3,"names":["calcSleepAverages","calcWellnessIndex","getInitialData","minuteSeries","hourSeries","daySeries","sleepSeries","_lastSleep$sleep","lastDate","lastSleep","find","day","date","currentStages","sleep","levels","lastDayDate","Date","sevenDaysAgo","getTime","last7Nights","filter","d","avgStages","console","log","lastDayMinuteData","record","timestamp","startsWith","lastDayHourData","wellness"],"sources":["D:/Repos/lcjs-dashboard/frontend/src/utils/getInitialData.js"],"sourcesContent":["import calcSleepAverages from './calcSleepAverages.js';\r\nimport calcWellnessIndex from './calcWellnessIndex.js';\r\n\r\nexport default function getInitialData(minuteSeries, hourSeries, daySeries, sleepSeries) {\r\n  const lastDate = \"2022-01-21\";\r\n\r\n  // Sleep data (from daySeries)\r\n  const lastSleep = daySeries.find(day => day.date === lastDate);\r\n  const currentStages = lastSleep?.sleep?.levels || [];\r\n\r\n  // Last 7 nights of sleep\r\n  const lastDayDate = new Date(lastDate + 'T00:00:00Z');\r\n  const sevenDaysAgo = new Date(lastDayDate.getTime() - (6 * 24 * 60 * 60 * 1000));\r\n\r\n  const last7Nights = (sleepSeries || []).filter(day => {\r\n    const d = new Date(day.date + 'T00:00:00Z');\r\n    return d >= sevenDaysAgo && d <= lastDayDate && day.sleep;\r\n  });\r\n\r\n  const avgStages = calcSleepAverages(last7Nights);\r\n  console.log(\"getInitialData: avgStages:\", avgStages);\r\n\r\n  // Wellness index\r\n  const lastDayMinuteData = minuteSeries.filter(record =>\r\n    record?.timestamp && record.timestamp.startsWith(lastDate)\r\n  );\r\n  const lastDayHourData = hourSeries.filter(record =>\r\n    record?.timestamp && record.timestamp.startsWith(lastDate)\r\n  );\r\n\r\n  const wellness = calcWellnessIndex(\r\n    lastDayMinuteData,\r\n    currentStages,\r\n    lastDayHourData\r\n  );\r\n\r\n  return {\r\n    currentStages,\r\n    avgStages,\r\n    wellness\r\n  };\r\n}\r\n"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,wBAAwB;AACtD,OAAOC,iBAAiB,MAAM,wBAAwB;AAEtD,eAAe,SAASC,cAAcA,CAACC,YAAY,EAAEC,UAAU,EAAEC,SAAS,EAAEC,WAAW,EAAE;EAAA,IAAAC,gBAAA;EACvF,MAAMC,QAAQ,GAAG,YAAY;;EAE7B;EACA,MAAMC,SAAS,GAAGJ,SAAS,CAACK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,KAAKJ,QAAQ,CAAC;EAC9D,MAAMK,aAAa,GAAG,CAAAJ,SAAS,aAATA,SAAS,wBAAAF,gBAAA,GAATE,SAAS,CAAEK,KAAK,cAAAP,gBAAA,uBAAhBA,gBAAA,CAAkBQ,MAAM,KAAI,EAAE;;EAEpD;EACA,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACT,QAAQ,GAAG,YAAY,CAAC;EACrD,MAAMU,YAAY,GAAG,IAAID,IAAI,CAACD,WAAW,CAACG,OAAO,CAAC,CAAC,GAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAK,CAAC;EAEhF,MAAMC,WAAW,GAAG,CAACd,WAAW,IAAI,EAAE,EAAEe,MAAM,CAACV,GAAG,IAAI;IACpD,MAAMW,CAAC,GAAG,IAAIL,IAAI,CAACN,GAAG,CAACC,IAAI,GAAG,YAAY,CAAC;IAC3C,OAAOU,CAAC,IAAIJ,YAAY,IAAII,CAAC,IAAIN,WAAW,IAAIL,GAAG,CAACG,KAAK;EAC3D,CAAC,CAAC;EAEF,MAAMS,SAAS,GAAGvB,iBAAiB,CAACoB,WAAW,CAAC;EAChDI,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,SAAS,CAAC;;EAEpD;EACA,MAAMG,iBAAiB,GAAGvB,YAAY,CAACkB,MAAM,CAACM,MAAM,IAClD,CAAAA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,SAAS,KAAID,MAAM,CAACC,SAAS,CAACC,UAAU,CAACrB,QAAQ,CAC3D,CAAC;EACD,MAAMsB,eAAe,GAAG1B,UAAU,CAACiB,MAAM,CAACM,MAAM,IAC9C,CAAAA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,SAAS,KAAID,MAAM,CAACC,SAAS,CAACC,UAAU,CAACrB,QAAQ,CAC3D,CAAC;EAED,MAAMuB,QAAQ,GAAG9B,iBAAiB,CAChCyB,iBAAiB,EACjBb,aAAa,EACbiB,eACF,CAAC;EAED,OAAO;IACLjB,aAAa;IACbU,SAAS;IACTQ;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}