{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\lcjs-dashboard\\\\frontend\\\\src\\\\components\\\\charts\\\\BarChart.jsx\",\n  _s = $RefreshSig$();\nimport { Themes, emptyFill, ColorHEX, SolidFill } from \"@lightningchart/lcjs\";\nimport { useEffect, useState, useContext, useId } from \"react\";\nimport { LCContext } from \"../../LC\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BarChart(props) {\n  _s();\n  const {\n    data\n  } = props.data;\n  const barTitle = props.title;\n  const id = useId();\n  const lc = useContext(LCContext);\n  const [barChart, setBarChart] = useState(undefined);\n\n  // Create chart just once during lifecycle of component.\n  useEffect(() => {\n    const container = document.getElementById(id);\n    if (!container) return;\n    if (!lc) {\n      console.log(\"LC context not ready yet\");\n      return;\n    }\n    const chart = lc.BarChart({\n      theme: Themes.cyberSpace,\n      container,\n      legend: {\n        addEntriesAutomatically: false\n      }\n    });\n    chart.setTitle('').setValueLabels(undefined).setBackgroundFillStyle(new SolidFill({\n      color: ColorHEX('#0D0725')\n    }));\n    setBarChart(chart);\n    return () => {\n      // Destroy chart when component lifecycle ends.\n      chart.dispose();\n    };\n  }, [id, lc]);\n\n  // Update cart data whenever data prop changes\n  useEffect(() => {\n    if (!barChart || data === undefined || barChart.isDisposed()) return;\n    barChart.setDataStacked([''], [{\n      subCategory: 'Today',\n      values: [data]\n    }, {\n      subCategory: '25k',\n      values: [25000 - data]\n    }]);\n  }, [barChart, data]);\n\n  // Whenever props.barTitle changes, it is reapplied to existing chart without recreating it\n  useEffect(() => {\n    if (!barChart) return;\n    barChart.setTitle(barTitle);\n  }, [barChart, barTitle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n}\n_s(BarChart, \"TTfFZLPfzJ8aTdYbe8K9aiGFQYU=\", false, function () {\n  return [useId];\n});\n_c = BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["Themes","emptyFill","ColorHEX","SolidFill","useEffect","useState","useContext","useId","LCContext","jsxDEV","_jsxDEV","BarChart","props","_s","data","barTitle","title","id","lc","barChart","setBarChart","undefined","container","document","getElementById","console","log","chart","theme","cyberSpace","legend","addEntriesAutomatically","setTitle","setValueLabels","setBackgroundFillStyle","color","dispose","isDisposed","setDataStacked","subCategory","values","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Repos/lcjs-dashboard/frontend/src/components/charts/BarChart.jsx"],"sourcesContent":["import { Themes, emptyFill, ColorHEX, SolidFill } from \"@lightningchart/lcjs\";\r\nimport { useEffect, useState, useContext, useId } from \"react\";\r\nimport { LCContext } from \"../../LC\";\r\n\r\nexport default function BarChart(props) {\r\n  const { data } = props.data;\r\n  const barTitle = props.title;\r\n  const id = useId();  \r\n  const lc = useContext(LCContext);\r\n  const [barChart, setBarChart] = useState(undefined);\r\n  \r\n  // Create chart just once during lifecycle of component.\r\n  useEffect(() => {\r\n    const container = document.getElementById(id);\r\n    if (!container) return\r\n    if (!lc) {\r\n      console.log(\"LC context not ready yet\");\r\n      return\r\n    }\r\n\r\n    const chart = lc.BarChart({\r\n        theme: Themes.cyberSpace,\r\n        container,\r\n        legend: {\r\n          addEntriesAutomatically: false,\r\n        },\r\n    })\r\n    chart\r\n    .setTitle('')\r\n    .setValueLabels(undefined)\r\n    .setBackgroundFillStyle(new SolidFill({ color: ColorHEX('#0D0725') }));\r\n    setBarChart(chart);\r\n    return () => {\r\n      // Destroy chart when component lifecycle ends.\r\n      chart.dispose();\r\n    };\r\n  }, [id, lc]); \r\n\r\n  // Update cart data whenever data prop changes\r\n  useEffect(() => {\r\n    if (!barChart || data === undefined || barChart.isDisposed()) return    \r\n    barChart\r\n    .setDataStacked(\r\n      [''],\r\n      [\r\n          { subCategory: 'Today', values: [data] },\r\n          { subCategory: '25k', values: [25000 - data] },\r\n      ],\r\n    )\r\n  }, [barChart, data]); \r\n\r\n  // Whenever props.barTitle changes, it is reapplied to existing chart without recreating it\r\n  useEffect(() => {\r\n    if (!barChart) return\r\n    barChart.setTitle(barTitle)\r\n  }, [barChart, barTitle]);\r\n\r\n  return <div id={id} style={{ width: \"100%\", height: \"100%\" }}></div>;\r\n\r\n}"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,sBAAsB;AAC7E,SAASC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,KAAK,QAAQ,OAAO;AAC9D,SAASC,SAAS,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAK,CAAC,GAAGF,KAAK,CAACE,IAAI;EAC3B,MAAMC,QAAQ,GAAGH,KAAK,CAACI,KAAK;EAC5B,MAAMC,EAAE,GAAGV,KAAK,CAAC,CAAC;EAClB,MAAMW,EAAE,GAAGZ,UAAU,CAACE,SAAS,CAAC;EAChC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAACgB,SAAS,CAAC;;EAEnD;EACAjB,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAACP,EAAE,CAAC;IAC7C,IAAI,CAACK,SAAS,EAAE;IAChB,IAAI,CAACJ,EAAE,EAAE;MACPO,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC;IACF;IAEA,MAAMC,KAAK,GAAGT,EAAE,CAACP,QAAQ,CAAC;MACtBiB,KAAK,EAAE5B,MAAM,CAAC6B,UAAU;MACxBP,SAAS;MACTQ,MAAM,EAAE;QACNC,uBAAuB,EAAE;MAC3B;IACJ,CAAC,CAAC;IACFJ,KAAK,CACJK,QAAQ,CAAC,EAAE,CAAC,CACZC,cAAc,CAACZ,SAAS,CAAC,CACzBa,sBAAsB,CAAC,IAAI/B,SAAS,CAAC;MAAEgC,KAAK,EAAEjC,QAAQ,CAAC,SAAS;IAAE,CAAC,CAAC,CAAC;IACtEkB,WAAW,CAACO,KAAK,CAAC;IAClB,OAAO,MAAM;MACX;MACAA,KAAK,CAACS,OAAO,CAAC,CAAC;IACjB,CAAC;EACH,CAAC,EAAE,CAACnB,EAAE,EAAEC,EAAE,CAAC,CAAC;;EAEZ;EACAd,SAAS,CAAC,MAAM;IACd,IAAI,CAACe,QAAQ,IAAIL,IAAI,KAAKO,SAAS,IAAIF,QAAQ,CAACkB,UAAU,CAAC,CAAC,EAAE;IAC9DlB,QAAQ,CACPmB,cAAc,CACb,CAAC,EAAE,CAAC,EACJ,CACI;MAAEC,WAAW,EAAE,OAAO;MAAEC,MAAM,EAAE,CAAC1B,IAAI;IAAE,CAAC,EACxC;MAAEyB,WAAW,EAAE,KAAK;MAAEC,MAAM,EAAE,CAAC,KAAK,GAAG1B,IAAI;IAAE,CAAC,CAEpD,CAAC;EACH,CAAC,EAAE,CAACK,QAAQ,EAAEL,IAAI,CAAC,CAAC;;EAEpB;EACAV,SAAS,CAAC,MAAM;IACd,IAAI,CAACe,QAAQ,EAAE;IACfA,QAAQ,CAACa,QAAQ,CAACjB,QAAQ,CAAC;EAC7B,CAAC,EAAE,CAACI,QAAQ,EAAEJ,QAAQ,CAAC,CAAC;EAExB,oBAAOL,OAAA;IAAKO,EAAE,EAAEA,EAAG;IAACwB,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEtE;AAAClC,EAAA,CAvDuBF,QAAQ;EAAA,QAGnBJ,KAAK;AAAA;AAAAyC,EAAA,GAHMrC,QAAQ;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}