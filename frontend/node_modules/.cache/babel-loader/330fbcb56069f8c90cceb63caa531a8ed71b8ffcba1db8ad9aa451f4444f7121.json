{"ast":null,"code":"export default function calcSleepAverages(sleepArray) {\n  // console.log(\"calcSleepAverages called with sleepArray.length:\", sleepArray.length);\n  if (sleepArray.length === 0) {\n    console.log(\"calcSleepAverages: No sleep data, returning null\");\n    return null;\n  }\n\n  // console.log(\"calcSleepAverages: sleepArray[0]:\", sleepArray[0]);\n\n  // Sum minutes\n  const totals = sleepArray.reduce((acc, night) => {\n    if (night.sleep) {\n      var _night$sleep$deep, _night$sleep$light, _night$sleep$rem;\n      acc.deep += ((_night$sleep$deep = night.sleep.deep) === null || _night$sleep$deep === void 0 ? void 0 : _night$sleep$deep.minutes) || 0;\n      acc.light += ((_night$sleep$light = night.sleep.light) === null || _night$sleep$light === void 0 ? void 0 : _night$sleep$light.minutes) || 0;\n      acc.rem += ((_night$sleep$rem = night.sleep.rem) === null || _night$sleep$rem === void 0 ? void 0 : _night$sleep$rem.minutes) || 0;\n    }\n    return acc;\n  }, {\n    deep: 0,\n    light: 0,\n    rem: 0,\n    wake: 0\n  });\n  const count = sleepArray.length;\n  const averages = {\n    deep: Math.round(totals.deep / count),\n    light: Math.round(totals.light / count),\n    rem: Math.round(totals.rem / count)\n  };\n  return averages;\n}","map":{"version":3,"names":["calcSleepAverages","sleepArray","length","console","log","totals","reduce","acc","night","sleep","_night$sleep$deep","_night$sleep$light","_night$sleep$rem","deep","minutes","light","rem","wake","count","averages","Math","round"],"sources":["C:/Users/jenni.mikkonen/OneDrive - LightningChart Ltd/Repos/lcjs-dashboard/frontend/src/utils/calcSleepAverages.js"],"sourcesContent":["export default function calcSleepAverages(sleepArray) {\r\n  // console.log(\"calcSleepAverages called with sleepArray.length:\", sleepArray.length);\r\n  if (sleepArray.length === 0) {\r\n    console.log(\"calcSleepAverages: No sleep data, returning null\");\r\n    return null;\r\n  }\r\n\r\n  // console.log(\"calcSleepAverages: sleepArray[0]:\", sleepArray[0]);\r\n\r\n  // Sum minutes\r\n  const totals = sleepArray.reduce(\r\n    (acc, night) => {\r\n      if (night.sleep) {\r\n        acc.deep += night.sleep.deep?.minutes || 0\r\n        acc.light += night.sleep.light?.minutes || 0\r\n        acc.rem += night.sleep.rem?.minutes || 0\r\n      }\r\n      return acc\r\n    },\r\n    { deep: 0, light: 0, rem: 0, wake: 0 }\r\n  )\r\n\r\n  const count = sleepArray.length\r\n  const averages = {\r\n    deep: Math.round(totals.deep / count),\r\n    light: Math.round(totals.light / count),\r\n    rem: Math.round(totals.rem / count),\r\n  }\r\n\r\n  return averages\r\n}\r\n"],"mappings":"AAAA,eAAe,SAASA,iBAAiBA,CAACC,UAAU,EAAE;EACpD;EACA,IAAIA,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;IAC3BC,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;IAC/D,OAAO,IAAI;EACb;;EAEA;;EAEA;EACA,MAAMC,MAAM,GAAGJ,UAAU,CAACK,MAAM,CAC9B,CAACC,GAAG,EAAEC,KAAK,KAAK;IACd,IAAIA,KAAK,CAACC,KAAK,EAAE;MAAA,IAAAC,iBAAA,EAAAC,kBAAA,EAAAC,gBAAA;MACfL,GAAG,CAACM,IAAI,IAAI,EAAAH,iBAAA,GAAAF,KAAK,CAACC,KAAK,CAACI,IAAI,cAAAH,iBAAA,uBAAhBA,iBAAA,CAAkBI,OAAO,KAAI,CAAC;MAC1CP,GAAG,CAACQ,KAAK,IAAI,EAAAJ,kBAAA,GAAAH,KAAK,CAACC,KAAK,CAACM,KAAK,cAAAJ,kBAAA,uBAAjBA,kBAAA,CAAmBG,OAAO,KAAI,CAAC;MAC5CP,GAAG,CAACS,GAAG,IAAI,EAAAJ,gBAAA,GAAAJ,KAAK,CAACC,KAAK,CAACO,GAAG,cAAAJ,gBAAA,uBAAfA,gBAAA,CAAiBE,OAAO,KAAI,CAAC;IAC1C;IACA,OAAOP,GAAG;EACZ,CAAC,EACD;IAAEM,IAAI,EAAE,CAAC;IAAEE,KAAK,EAAE,CAAC;IAAEC,GAAG,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAE,CACvC,CAAC;EAED,MAAMC,KAAK,GAAGjB,UAAU,CAACC,MAAM;EAC/B,MAAMiB,QAAQ,GAAG;IACfN,IAAI,EAAEO,IAAI,CAACC,KAAK,CAAChB,MAAM,CAACQ,IAAI,GAAGK,KAAK,CAAC;IACrCH,KAAK,EAAEK,IAAI,CAACC,KAAK,CAAChB,MAAM,CAACU,KAAK,GAAGG,KAAK,CAAC;IACvCF,GAAG,EAAEI,IAAI,CAACC,KAAK,CAAChB,MAAM,CAACW,GAAG,GAAGE,KAAK;EACpC,CAAC;EAED,OAAOC,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}